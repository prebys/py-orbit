#summary Description of how to create and use Foils.

= Summary =

This page describes how to track particles through foils. The Foil class allows the creation of rectangular carbon foils of user defined thickness and size. An arbitrary number of foils can be added to any lattice. Two different particle scattering methods are available in the Foil class. Particles are neither created nor absorbed in the foils. Python convenience scripts are available for adding foils to the lattice. From the standpoint of the lattice, foils are considered as zero length elements. 

= Associated Classes =

|| *Name* || *Description* || *Address* ||
|| [Foil] || The class which defines the foil || $ORBIT_ROOT/src/orbit/MaterialInteractions/ ||
|| MaterialInteractions || Class containing a collection of particle scattering methods || $ORBIT_ROOT/src/orbit/MaterialInteractions/ ||
||cross_sections || Contains the elastic and inelastic cross sections for each material (barns), and material properties (MKS) || $ORBIT_ROOT/src/orbi/MaterialInteractions/||
||num_recipes || Numerical recipes used in scattering models || $ORBIT_ROOT/src/orbi/MaterialInteractions/ ||
|| wrap_foil|| The python wrapper class for Foil ||  $ORBIT_ROOT/src/orbi/MaterialInteractions/ ||
|| TeapotFoilNode || The python module that allows a user to define Teapot foil || $ORBIT_ROOT/py/orbit/foil/ ||
|| foilLatticeModifications || The python module that allows a user to  add a defined foil to the teapot lattice in a drift region || $ORBIT_ROOT/py/orbit/foil/ ||


= Python Accessible Methods and Variables =
  # *TeapotFoilNode(double xmin, double xmax, double ymin, double ymax, double thick, string name)*. Creates a teapot style foil. Has a track method. Variables:
     * xmin: Horizontal minimum of foil. 
     * xmax: Horizontal maximum of foil.
     * ymin: Vertical minimum of foil.
     * ymax: Vertical maximum of foil.
     * thick: Thickness of foil (ug/cm^2)
     * name: User defined name of the foil. 
  # *addTeapotFoilNode(TEAPOT_Lattice lattice, double position, TeapotFoilNode foil_node)*. A method to add the collimator to a Teapot lattice. Variables: 
     * lattice: The Teapot lattice the collimator should be added to.
     * position: The start position of the collimator in the lattice.
     * foil_node: A previously defined teapot style foil.


= Example Scripts = 

The following example demonstrates how a 400 ug/cm^2 teapot style foil is created and then added to an existing lattice, 18.5 meters downstream of the lattice start point. The scattering method is defined and an existing bunch is transported through the foil. 

{{{

xmin = -0.100
xmax = 0.100
ymin = -0.100
ymax = 0.100
thick = 400

foil = TeapotFoilNode(xmin, xmax, ymin, ymax, thick, "Foil 1")

addTeapotFoilNode(teapot_latt,18.5,foil) 

#=====track bunch through Collimator Node============
paramsDict = {}
paramsDict["bunch"]= b

scatterchoice = 1
foil.setScatterChoice(scatterchoice)
foil.track(paramsDict)

}}}


