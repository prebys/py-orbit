#summary Summary page for creating kickers with custom waveforms (for instance for injection painting applications).

= Summary =

This page describes how to use the longitudinal space charge package and associated classes.  The longitudinal space charge class is based on the longitudinal space charge and impedance analytic model and sign conventions in A. Chao's text.  The module allows the user to import external impedances in units of Ohm/n (n=mode number), and to turn the space charge portion on or off.  

= Associated Classes =

|| *Name* || *Description* || *Address* ||
|| [LSpaceChargeCalc] || The class which does the longitudinal space charge and impedance calculationl || $ORBIT_ROOT/src/orbit/spacecharge/ ||
|| sc1DNode || The python module that allows a user to define Teapot longitudinal space charge node || $ORBIT_ROOT/py/orbit/space_charge/ ||
|| scLatticeModifications || The python module that allows a user to add a defined SC1D_AccNode to the teapot lattice in a drift region || $ORBIT_ROOT/py/orbit/space_charge/ ||


= Python Accessible Methods and Variables =
  # *[SC1D_AccNode](nt b_a, double length, int nMacrosMin, int useSpaceCharge, int nBins)*. Creates a longitudinal space charge node. Variables:
     * b_a: Approximate ratio of beam pipe radius to beam radius.
     * length: Length of the lattice
     * nMacrosMin: Minimum number of macroparticles needed to do the computation 
     * useSpaceCharge: Flag for turning the space charge piece on (1) or off (0). 
     * nBins: Number of longitudinal slicing bins for space charge kick calculation. 
  # *assignImpedance(pyObject py_complex_arr)*. Convenience method for assigning an impedance array. 
     * py_complex_arr: A python array of complex numbers which are the impedances in units of Ohms/n (n is mode number). For inductive impedances, convention is that real part is positive and imaginary part negative. 
  # *track(Dict paramsDict)*. A method for doing the longitudinal space charge kick. Implemented by the lattice trackBunch method. Variables:  
  # *addLongitudinalSpaceChargeNode(lattice, position, sc1D_node)*. Routine to add a defined SC1D_AccNode to a drift region of a teapot lattice. Variables:
     * lattice: The teapot lattice.
     * position: Position of the SC1D_AccNode element in meters.
     * sc1D_node: A predefined SC1D_AccNode 


= Example Scripts = 

The following example demonstrates adding a longitudinal space charge node to a lattice.  Example can be found in ORBIT_ROOT/py-orbit/examples/Space_Charge/sc1d/longscbunchlattice.py

{{{