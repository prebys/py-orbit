
= Summary =

This class is identical to the [SNSESpreadDist] class with added functionality of time dependent zmin and zmax variables. Zmin and zmax must both be lists of no less than two pairs and functions (in the mathematical sense) of time. When getCoordinates() is called, the time of the synchronous particle is used and the given functions are interpolated for values. 


= Python Accessible Methods and Variables=

 # *SNSESpreadDistPaint(lattlength, zminFunc, zmaxFunc, tailfraction, sp, emean, esigma, etrunc, emin, emax, ecparams, esparams)*. Creates the class.
  * lattlength: Total lattice length.
  * zminFunc: Minimum z of the distribution.
  * zmaxFunc: Maximum z of the distribution.
  * lattlength: Total lattice length.
  * sp: [SyncParticle] object (representing the synchronous particle of the distribution).
  * emean: Mean energy of the distribution.
  * esigma: Sigma spread of the energy distribution
  * etrunc: Flag for truncating the distribution. 0 is no truncation, 1 is truncation as specified by user parameters emit and emax.
  * emin: If etrunc is not 0, then this is the minimum of the energy distribution.
  * emax: If etrunc is not 0, then this is the maximum of the energy distribution.
  * ecparams: Parameters of the energy centroid jitter. List is ecparams = (ecmean, ecsigma, ectrunc, ecmin, ecmax, ecdrifti, ecdriftf, drifttime), where ecmean = mean of the centroid jitter; ecsigma = sigma of the centroid jitter; ectrunc = flag for truncation (0 for none, 1 for truncate); ecmin = the minimum energy for the jittered distribution, when ectrunc is not zero; ecmax = the minimum energy for the jittered distribution, when ectrunc is not zero; ecdrifti = initial drift energy of the centroid; ecdriftf = final drift energy of the centroid; driftime = total duration of centroid drift.
  * esparams: Parameters of the energy sinusoidal spreader. List is esparams = (esnu, esphase, esmax, nulltime) , where esnu = frequency of the [ sinusoidal spreader Hz]; esphase = constant phase of the spreader, esmax = amplitude of the spreader; nulltime = time for decay of spreader voltage
 # *getCoordinates()*. Routine that generates and returns a single coordinate pair within specified distribution.

=Examples=
In the following example a 1 GeV SNS style distribution with centroid energy jitter is created. There is no sinusoidal energy variation in this example. The complete example can be found in $ORBIT_ROOT/examples/Injection/ORBIT_Benchmarks/JohoXYSNSESpreadL/injectSNSESpread.py