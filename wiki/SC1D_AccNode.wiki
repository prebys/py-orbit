#summary Longitudinal space charge node implementation for Teapot lattices

= Summary =

This is the Teapot implementation of the longitudinal space charge class. This must be used in order to add a longitudinal space charge node (LSpaceChargeCalc class) as element in a Teapot lattice. 

= Python Accessible Methods =

  # *SC1D_AccNode(int b_a, double length, int nMacrosMin, int useSpaceCharge, int nBins)*. Creates a longitudinal space charge node. Variables:
     * b_a: Approximate ratio of beam pipe radius to beam radius.
     * length: Length of the lattice
     * nMacrosMin: Minimum number of macroparticles needed to do the computation 
     * useSpaceCharge: Flag for turning the space charge piece on (1) or off (0). 
     * nBins: Number of longitudinal slicing bins for space charge kick calculation. 
  # *assignImpedance(pyObject py_complex_arr)*. Convenience method for assigning an impedance array. 
     * py_complex_arr: A python array of complex numbers which are the impedances in units of Ohms/n (n is mode number). For inductive impedances, convention is that real part is positive and imaginary part negative. 
  #  *track(_Dict_ paramsDict)*. A method for doing the longitudinal space charge kick. Implemented by the lattice trackBunch method. Variables:  
     * paramsDict: A dictionary which should contains at least one item: 1) the main bunch.