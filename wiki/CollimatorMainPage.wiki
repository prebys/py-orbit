= Summary =
The collimator class and auxiliary classes model the propagation of protons through various materials. The module only applies to protons in the energy range of 0 - 1.5 GeV. Other particle species are not handled, and there are no secondary particles generated.

There are five available collimator shapes: cirlce, elliptical, one sided flat, two sided flat, and rectangular.  The shape and aperture of the collimator are specified by the user.  0 aperture corresponds to a solid slab of material. 

Six materials are available for the collimator: 1=carbon, 2=aluminum, 3=iron, 4=copper, 5=tantalum, 6=tungstun, 7=platinum, 8=lead, 9 = black absorber.  The black absorber acts like an aperture which absorbs a particle on impact. There is also a user-specified density factor for each material, useful for modeling materials that are layered with water or air. 

The module requires input of two bunches from the Bunch class: one bunch for the alive particles being propagated, and one bunch to be populated with particles lost in the collimator. Particles are lost in the collimator when their energy is below 20 MeV, or when they suffer a nuclear inelastic scattering event. 

= Associated Classes =
  * *Collimator* - The class which defines the collimator and propagates particles. Address: $ORBIT_ROOT/src/orbit/MaterialInteractions/ .
  * *MaterialInteractions* - Class containing a collection of particle scattering methods. Address: $ORBIT_ROOT/src/orbi/MaterialInteractions/ .
  * *cross_sections* - This class belongs to namespace OrbitUtils.  It contains the elestic and inelastic cross sections for each material (barns), and material properties in MKS units. Address: $ORBIT_ROOT/src/orbi/MaterialInteractions/ .
  * *num_recipes* - Numerical recipes used in scattering models. Address: $ORBIT_ROOT/src/orbi/MaterialInteractions/ .
  * *wrap_collimator* - The python wrapper class for Collimator. Address: $ORBIT_ROOT/src/orbi/MaterialInteractions/ .
  * *TeaPotCollimatorNode* - The python module that allows a user to  define collimator. Address: $ORBIT_ROOT/py/orbit/collimation/ .
  * *collimatorLatticeModifications* - The python module that allows a user to  add a defined collimator to the lattice in a drift region. Address: $ORBIT_ROOT/py/orbit/collimation/ .

= User Accessible Methods and Variables =