./src		- source code for the core ORBIT C++ classes, including
		  wrappers, etc.

./py		- python modules and wrapper classes for the core ORBIT
		  classes.

./ext		- source code for external modules. Compilations of this
		  code should be placed into ./lib.

./lib  	- .so shared libraries to be used under pyORBIT interpreter.

./examples	- samples of pyORBIT scripts.

./doc		- pyORBIT documentation.

./conf		- configuration information.

./bin		- a directory containing the pyORBIT executable.

============SETTING THE ENVIRONMENT VARIABLES=============

The user should define:

ORBIT_ROOT	- the full path to the directory pyORBIT.

ORBIT_ARCH	- architecture of the system. At present it is LINUX only.

PYTHON_VERSION	- python version, for example: export PYTHON_VERSION = 2.4

PYTHON_ROOT_LIB	- the name of the python library including the full path.
                  It is usually
		  /usr/lib/python$(PYTHON_VERSION)/config/libpython$(PYTHON_VERSION).a
		  or it could be shared python library and in this case
		  export PYTHON_ROOT_LIB=' -L/usr/lib/python${PYTHON_VERSION}/config -lpython${PYTHON_VERSION}'

PYTHON_ROOT_INC	- location of the python header files.
                  It is usually
		  /usr/include/python$(PYTHON_VERSION)

PYTHONPATH	- should be modified to include access to the ORBIT
		  python modules:
		  export PYTHONPATH=${PYTHONPATH}:${ORBIT_ROOT}/py:${ORBIT_ROOT}/lib
			
LD_LIBRARY_PATH - location of the shared libraries with extenstions of the pyORBIT
			export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ORBIT_ROOT}/lib
			
FFTW3_ROOT - location of the root directory of the FFTW library, version 3 and above  

MPI_CPP - the name of the MPI c++ compiler (could be mpiCC, mpic++ etc.)

===============TROUBLESHOOTING===============================================
You can use another build tool - Scons (http://www.scons.org/) by typing 
>scons
in the pyORBIT directory. In this case python will figure all locations by itself. 

Another hint.
If you do not know where your Python libraries are, you can use python itself
to figure that out
>python
>>from distutils import sysconfig
>>print sysconfig.get_config_var('LIBPL')
>>print sysconfig.get_config_var('LIBRARY')
>>sysconfig.get_config_var('INCLUDEPY')

These commands will tell you where they are (library and headers).
